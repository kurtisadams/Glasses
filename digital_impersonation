%% digital impersonation vs. Openface10

% parameters
n_epochs = 1;
stop_prob = 0.924;
kappa = 0.25;
lr = 5e-5;
weight_decay = 1e-5;

% cpu/gpu?
platform = 'cpu';
if gpuDeviceCount>0
    platform = 'gpu';
end

% model and attacker's image
face_net_path = 'models/openface10-recognition-nn.mat';
im_filepath = {'data/demo-data1/aligned_vgg_brad_pitt.jpg'};

% target to impersonate (Aaron Eckhart)
target = 1;

% find transforms to align images & eyeglasses to the openface pose
align_data = load('dependencies/openface/alignment_info.mat');
im = imread(im_filepath{1});
[~, tforms] = openface_align(im, align_data.align_info);
alignment.tforms = tforms{1};
alignment.im_size = [align_data.align_info.dim align_data.align_info.dim];

% run attack
[gen, discrim, objective] = agn_dagnn(...
                                      'kappa', kappa, ...
                                      'lr_gen', lr, ...
                                      'weight_decay', weight_decay, ...
                                      'attack', 'impersonate', ...
                                      'targets', target, ...
                                      'stop_prob', stop_prob, ...
                                      'face_im_paths', im_filepath, ...
                                      'n_epochs', n_epochs, ...
                                      'platform', platform, ...
                                      'face_net_path', face_net_path, ...
                                      'alignment', alignment ...
                                      );
                                  
% store results
result = struct('gen', gen, 'discrim', discrim, 'objective', objective, ...
                'target', target, 'im_path', im_filepath,  ...
                'attack_type', 'dodge', 'stop_prob', stop_prob, ... 
                'lr', lr, 'kappa', kappa, 'face_net_path', face_net_path, ...
                'weight_decay', weight_decay, 'alignment', alignment);
save('results/demo-digital-impersonation-openface10.mat', 'result');
